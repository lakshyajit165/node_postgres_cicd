name: test endpoints

on:
    push:
        branches: [dev, stage, master]
    pull_request:
        branches: [master]

jobs:
    api-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]
        services:
            postgres:
                image: postgres:12-alpine
                env:
                    POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
                    POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                    POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 10s --health-retries 10

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies
              run: npm install

            - name: Wait for PostgreSQL to start
              run: sleep 10

            - name: Check PostgreSQL service availability
              run: |
                  until pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; do
                    sleep 2
                  done

            - name: API testing
              run: npm run test
              env:
                  DB_USER: ${{ secrets.POSTGRES_USER }}
                  DB_HOST: ${{ secrets.POSTGRES_HOST }}
                  DATABASE: ${{ secrets.POSTGRES_DB }}
                  DB_HMAC: ${{ secrets.POSTGRES_PASSWORD }}
                  DB_PORT: ${{ secrets.POSTGRES_DB_PORT }}
                  DB_DIALECT: ${{ secrets.POSTGRES_DB_DIALECT }}
                  DB_POOL_CONNECTION_LIMIT: ${{ secrets.POSTGRES_DB_POOL_CONNECTION_LIMIT }}
                  DB_POOL_IDLE_TIMEOUT: ${{ secrets.POSTGRES_DB_POOL_IDLE_TIMEOUT }}
                  APP_PORT: ${{ secrets.NODE_APP_PORT }}
